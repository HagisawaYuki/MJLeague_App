// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String       @default(cuid()) @id
  name          String       @unique
  password      String
  players    Player[]
  games      Game[]
}

model Player {
  id     Int              @id @default(autoincrement())
  name   String
  scores HanshuangScore[]
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model Game {
  id         Int         @id @default(autoincrement())
  date       String // 年月日まとめて保存
  hanshuangs Hanshuang[]
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model Hanshuang {
  id        Int              @id @default(autoincrement())
  game      Game             @relation(fields: [gameId], references: [id])
  gameId    Int
  scores    HanshuangScore[] // 各プレイヤーの点数（中間テーブル）
  createdAt DateTime         @default(now())
}

model HanshuangScore {
  id          Int       @id @default(autoincrement())
  player      Player    @relation(fields: [playerId], references: [id])
  playerId    Int
  hanshuang   Hanshuang @relation(fields: [hanshuangId], references: [id])
  hanshuangId Int
  score       Int // プレイヤーの得点（最終点数）
  chip        Int // チップのやり取りも記録したいなら
}